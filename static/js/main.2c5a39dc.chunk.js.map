{"version":3,"sources":["components/AddTodo.js","components/TodosHeader.js","components/TodoItem.js","components/TodosList.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","props","useState","title","setTitle","className","onSubmit","evt","preventDefault","addTodo","alert","name","type","placeholder","value","onChange","target","data-testid","TodosHeader","date","Date","day","getDate","weekDay","getDay","month","getMonth","hour","getHeaderImageClass","getHours","TodoItem","textDecorationClass","todo","completed","textColorClass","checked","markComplete","id","onClick","delTodo","TodosList","todos","setTodos","filter","map","newTodo","uuidv4","length","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c5a39dc.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { FaEdit } from \"react-icons/fa\";\nimport PropTypes from \"prop-types\";\n\nfunction AddTodo(props) {\n  const [title, setTitle] = useState(\"\");\n\n  const onSubmit = (evt) => {\n    // Stop form being submmited to same file and reloading the page\n    evt.preventDefault();\n\n    // Validate todo text\n    if (!title) {\n      alert(\"Please add a task description.\");\n      return;\n    }\n\n    props.addTodo(title);\n\n    // Clear task text in component state\n    setTitle(\"\");\n  };\n\n  return (\n    <div className=\"mx-4 mt-6\">\n      <form onSubmit={onSubmit} className=\"flex items-center transition duration-500 ease-in-out py-2 border-b-2 border-gray-300 focus-within:border-b-2 focus-within:border-pink-600\">\n        <input\n          name=\"task-title\"\n          type=\"text\"\n          placeholder=\"Add task...\"\n          value={title}\n          onChange={(evt) => setTitle(evt.target.value)}\n          className=\"flex-1 px-2.5 bg-gray-200 placeholder-gray-500 focus:outline-none\"\n          data-testid=\"task-input-field\"\n        />\n        <button\n          type=\"submit\"\n          className=\"transition duration-200 ease-in-out text-gray-400 focus:outline-none hover:text-pink-500 text-lg px-2 cursor-pointer\"\n          data-testid=\"task-submit-btn\">\n          <FaEdit />\n        </button>\n      </form>\n    </div>\n  );\n}\n\nAddTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default AddTodo;\n","function TodosHeader() {\n  // TODO improve this, this is just to test the design\n  const date = new Date();\n  const day = date.getDate();\n  const weekDay = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ][date.getDay()];\n  const month = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ][date.getMonth()];\n\n\n\n  // Use a different header image depending on the time of day\n  const getHeaderImageClass = (hour) => {\n    if (hour >= 0) {\n      // Day time - 06:00 to 16:00\n      return \"bg-todo-header-fondo\";\n    } \n  };\n\n  return (\n    <header\n      className={`${getHeaderImageClass(date.getHours())} bg-cover bg-center border-b-1 border-gray-300 px-4 py-6`}\n      data-testid=\"todos-header-bg\"\n    >\n      <h1 className=\"text-2xl text-white\" data-testid=\"calendar-date\">\n        {`${weekDay}, ${day}`}\n      </h1>\n      <p className=\"pt-1 text-lg text-gray-100\" data-testid=\"calendar-month\">\n        {month}\n      </p>\n    </header>\n  );\n}\n\nexport default TodosHeader;\n","import { FaTrashAlt } from \"react-icons/fa\";\nimport PropTypes from \"prop-types\";\n\nfunction TodoItem(props) {\n  let textDecorationClass = props.todo.completed\n    ? \"line-through\"\n    : \"no-underline\";\n  let textColorClass = props.todo.completed\n    ? \"text-pink-600\"\n    : \"text-gray-800\";\n\n  return (\n    <li\n      className={`flex items-center space-x-1 py-2.5 px-2.5 border-b border-gray-300 transition duration-300 ease-in ${textDecorationClass} ${textColorClass}`}\n      data-testid=\"todo-item\"\n    >\n      <input\n        name=\"completed-checkbox\"\n        type=\"checkbox\"\n        className=\"form-checkbox rounded text-pink-600 shadow-none focus:shadow-none focus:ring-0 focus:ring-offset-0 focus:outline-none\"\n        checked={props.todo.completed}\n        value={props.todo.completed}\n        onChange={() => props.markComplete(props.todo.id)}\n        data-testid=\"task-completed-checkbox\"\n      />\n      <span className=\"flex-1 px-2 min-w-0 break-words\">\n        {props.todo.title}\n      </span>\n      <button\n        onClick={() => props.delTodo(props.todo.id)}\n        className=\"transition duration-200 ease-in-out text-gray-400 hover:text-pink-500 focus:outline-none\"\n        data-testid=\"delete-task-btn\"\n      >\n        <FaTrashAlt />\n      </button>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport AddTodo from \"./AddTodo\";\nimport TodosHeader from \"./TodosHeader\";\nimport TodoItem from \"./TodoItem\";\n\nfunction TodosList() {\n  const [todos, setTodos] = useState([]);\n\n  // Add a new todo item\n  const addTodo = (title) => {\n    let newTodo = {\n      id: uuidv4(),\n      title, // new in ES6: same as title: title\n      completed: false,\n    };\n\n    // [...] = spread operator (copy items)\n    // Used because we can't (and shouldn't) change state values directly\n    setTodos([...todos, newTodo]);\n  };\n\n  // Delete a todo item\n  const delTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  // Toggle completed state of todo item\n  const markComplete = (id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col bg-gray-200 rounded shadow-lg\">\n      <TodosHeader />\n\n      <AddTodo addTodo={addTodo} />\n\n      <div className=\"mx-4 my-6 h-96 overflow-auto\">\n        {todos.length > 0 ? (\n          // If there are todo items, show them in a list\n          <ul className=\"mt-4\" data-testid=\"todos-list\">\n            {todos.map((todo) => (\n              <TodoItem\n                key={todo.id}\n                todo={todo}\n                markComplete={markComplete}\n                delTodo={delTodo}\n              />\n            ))}\n          </ul>\n        ) : (\n          // No todo items, all caught up\n          <p\n            className=\"my-16 text-lg text-center text-gray-500\"\n            data-testid=\"empty-todos-message\"\n          >\n            No to-dos By the moment üíÜ‚Äç‚ôÇÔ∏è\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TodosList;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport TodosList from \"./components/TodosList\";\n\n\nfunction App() {\n  return (\n    <div id=\"app\" className=\"flex flex-col container max-w-md mx-auto md:pt-8\">\n      <Router basename={process.env.PUBLIC_URL}>\n          <section>\n            <Switch>\n              <Route exact path=\"/\" component={TodosList} />\n            </Switch>\n          </section>\n\n          \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}